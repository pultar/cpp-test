# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  windows-build:
    runs-on: [ self-hosted, "${{ matrix.os }}", "${{ matrix.architecture }}" ]
    strategy:
      matrix:
        os: ["Windows"]
        architecture: ["Arm64"]
    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  macos-build:
    runs-on: [ self-hosted, "${{ matrix.os }}", "${{ matrix.architecture }}" ]
    strategy:
      matrix:
        os: ["macOS"]
        architecture: ["Arm64"]
    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  linux-build:
    runs-on: [ self-hosted, "${{ matrix.os }}", "${{ matrix.architecture }}" ]
    strategy:
      matrix:
        os: ["Linux"]
        architecture: ["Arm64", "Arm", "x64"]
    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
